<defun name="compute_and_aggregate">
  <in name="task_trigger" type="control" place="trigger"/>
  <out name="aggregated_value" type="unsigned int" place="global_sum"/>

  <net>

    <place name="trigger" type="control"/>
    <place name="computed_values" type="unsigned int"/>
    <place name="global_sum" type="unsigned int">
      <token><value>0U</value></token>
    </place>

    <transition name="compute">
      <defun>
        <in name="in" type="control"/>
        <out name="out" type="unsigned int"/>

        <module name="compute_random_value"
                function="out print_and_return_a_random_value()">
        <cinclude href="iostream"/>
        <cinclude href="random"/>
        <code><![CDATA[
          unsigned int const some_computed_value = std::random_device{}();
          std::cout << "Random value: " << some_computed_value << '\n';

          return some_computed_value;
        ]]></code>
        </module>
      </defun>

      <connect-in port="in" place="trigger"/>
      <connect-out port="out" place="computed_values"/>
    </transition>

    <transition name="aggregate_value_sum">
      <defun>
        <in name="i" type="unsigned int"/>
        <inout name="S" type="unsigned int"/>
        <expression>
          ${S} := ${S} + ${i}
        </expression>
      </defun>
      <connect-in port="i" place="computed_values"/>
      <connect-inout port="S" place="global_sum"/>
    </transition>

  </net>
</defun>