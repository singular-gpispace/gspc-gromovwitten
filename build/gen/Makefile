# GPI-Space generated: DO NOT EDIT THIS FILE!
# time of creation: 2024-04-12 19:12:45

MODULES += pnetc/op/libcombination_vec.so
MODULES += pnetc/op/libsum_degree.so
MODULES += pnetc/op/libfeynman.so
MODULES += pnetc/op/libtoken.so
MODULES += pnetc/op/libsum.so

ifndef CXX
  $(error Variable CXX is not defined)
endif

CXXFLAGS += -fPIC
ifeq '' '$(findstring clang,$(CXX))'
  CXXFLAGS += -fno-gnu-unique
endif
CXXFLAGS += --std=c++14

CXXFLAGS += -I.
CXXFLAGS += -isystem "/home/atraore/spack/opt/spack/linux-ubuntu22.04-skylake/gcc-11.3.0/gpi-space-23.06-gxye6b7ngsnbxnzjkfsfqtvanynyghdk/include"
CXXFLAGS += -isystem "/home/atraore/spack/opt/spack/linux-ubuntu22.04-skylake/gcc-11.3.0/gpi-space-23.06-gxye6b7ngsnbxnzjkfsfqtvanynyghdk/external/boost/include"
LDFLAGS += -L "/home/atraore/spack/opt/spack/linux-ubuntu22.04-skylake/gcc-11.3.0/gpi-space-23.06-gxye6b7ngsnbxnzjkfsfqtvanynyghdk/external/boost/lib"
LDFLAGS += -Wl,-rpath-link="/home/atraore/spack/opt/spack/linux-ubuntu22.04-skylake/gcc-11.3.0/gpi-space-23.06-gxye6b7ngsnbxnzjkfsfqtvanynyghdk/external/boost/lib"

LDFLAGS += -L "/home/atraore/spack/opt/spack/linux-ubuntu22.04-skylake/gcc-11.3.0/gpi-space-23.06-gxye6b7ngsnbxnzjkfsfqtvanynyghdk/lib"

ifndef CP
  CP := $(shell which cp 2>/dev/null)
endif

ifndef MKDIR
  MKDIR := $(shell which mkdir 2>/dev/null)
endif

ifndef RM
  RM := $(shell which rm 2>/dev/null) -f
endif

include Makefile.CXXFLAGS
include Makefile.LDFLAGS

.PHONY: default modules depend install uninstall

default: depend $(MODULES)
modules: depend $(MODULES) objcleandep

ifeq "$(CP)" ""

%.cpp: %.cpp_tmpl
	$(error Missing file '$@'.)

else

%.cpp: %.cpp_tmpl
	$(warning !!!)
	$(warning !!! COPY $*.cpp_tmpl TO $*.cpp)
	$(warning !!! THIS IS PROBABLY NOT WHAT YOU WANT!)
	$(warning !!!)
	$(CP) $^ $@

endif

####
#### module-functions combination_vec
####
##
## function partition
##
OBJ_combination_vec += pnetc/op/combination_vec/partition.o
include Makefile.CXXFLAGS_combination_vec_partition
-include pnetc/op/combination_vec/partition.d
pnetc/op/combination_vec/partition.o: pnetc/op/combination_vec/partition.cpp Makefile.CXXFLAGS Makefile.CXXFLAGS_combination_vec_partition
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_combination_vec_partition) -MM -MP -MT 'pnetc/op/combination_vec/partition.o' $< -MF pnetc/op/combination_vec/partition.d
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_combination_vec_partition) -c $< -o $@
DEPENDS += pnetc/op/combination_vec/partition.d

####
#### module combination_vec
####
OBJ_combination_vec += pnetc/op/combination_vec.o
pnetc/op/combination_vec.o: pnetc/op/combination_vec.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -c $< -o $@
pnetc/op/combination_vec.d: pnetc/op/combination_vec.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -MM -MP -MT 'pnetc/op/combination_vec.d' -MT 'pnetc/op/combination_vec.o' $< -MF $@
ifneq "$(wildcard pnetc/op/combination_vec.d)" ""
  include pnetc/op/combination_vec.d
endif
DEPENDS += pnetc/op/combination_vec.d

include Makefile.LDFLAGS_combination_vec

pnetc/op/libcombination_vec.so: $(OBJ_combination_vec) $(TYPE_OBJS) Makefile.LDFLAGS Makefile.LDFLAGS_combination_vec
	$(CXX) -shared $(filter-out Makefile.LDFLAGS Makefile.LDFLAGS_combination_vec, $^) -o $@ $(LDFLAGS_combination_vec) $(LDFLAGS) -lwe-dev

####
#### module-functions sum_degree
####
##
## function sum_deg
##
OBJ_sum_degree += pnetc/op/sum_degree/sum_deg.o
include Makefile.CXXFLAGS_sum_degree_sum_deg
-include pnetc/op/sum_degree/sum_deg.d
pnetc/op/sum_degree/sum_deg.o: pnetc/op/sum_degree/sum_deg.cpp Makefile.CXXFLAGS Makefile.CXXFLAGS_sum_degree_sum_deg
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_sum_degree_sum_deg) -MM -MP -MT 'pnetc/op/sum_degree/sum_deg.o' $< -MF pnetc/op/sum_degree/sum_deg.d
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_sum_degree_sum_deg) -c $< -o $@
DEPENDS += pnetc/op/sum_degree/sum_deg.d

####
#### module sum_degree
####
OBJ_sum_degree += pnetc/op/sum_degree.o
pnetc/op/sum_degree.o: pnetc/op/sum_degree.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -c $< -o $@
pnetc/op/sum_degree.d: pnetc/op/sum_degree.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -MM -MP -MT 'pnetc/op/sum_degree.d' -MT 'pnetc/op/sum_degree.o' $< -MF $@
ifneq "$(wildcard pnetc/op/sum_degree.d)" ""
  include pnetc/op/sum_degree.d
endif
DEPENDS += pnetc/op/sum_degree.d

include Makefile.LDFLAGS_sum_degree

pnetc/op/libsum_degree.so: $(OBJ_sum_degree) $(TYPE_OBJS) Makefile.LDFLAGS Makefile.LDFLAGS_sum_degree
	$(CXX) -shared $(filter-out Makefile.LDFLAGS Makefile.LDFLAGS_sum_degree, $^) -o $@ $(LDFLAGS_sum_degree) $(LDFLAGS) -lwe-dev

####
#### module-functions feynman
####
##
## function feynman_integral_degree
##
OBJ_feynman += pnetc/op/feynman/feynman_integral_degree.o
include Makefile.CXXFLAGS_feynman_feynman_integral_degree
-include pnetc/op/feynman/feynman_integral_degree.d
pnetc/op/feynman/feynman_integral_degree.o: pnetc/op/feynman/feynman_integral_degree.cpp Makefile.CXXFLAGS Makefile.CXXFLAGS_feynman_feynman_integral_degree
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_feynman_feynman_integral_degree) -MM -MP -MT 'pnetc/op/feynman/feynman_integral_degree.o' $< -MF pnetc/op/feynman/feynman_integral_degree.d
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_feynman_feynman_integral_degree) -c $< -o $@
DEPENDS += pnetc/op/feynman/feynman_integral_degree.d

####
#### module feynman
####
OBJ_feynman += pnetc/op/feynman.o
pnetc/op/feynman.o: pnetc/op/feynman.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -c $< -o $@
pnetc/op/feynman.d: pnetc/op/feynman.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -MM -MP -MT 'pnetc/op/feynman.d' -MT 'pnetc/op/feynman.o' $< -MF $@
ifneq "$(wildcard pnetc/op/feynman.d)" ""
  include pnetc/op/feynman.d
endif
DEPENDS += pnetc/op/feynman.d

include Makefile.LDFLAGS_feynman

pnetc/op/libfeynman.so: $(OBJ_feynman) $(TYPE_OBJS) Makefile.LDFLAGS Makefile.LDFLAGS_feynman
	$(CXX) -shared $(filter-out Makefile.LDFLAGS Makefile.LDFLAGS_feynman, $^) -o $@ $(LDFLAGS_feynman) $(LDFLAGS) -lwe-dev

####
#### module-functions token
####
##
## function count
##
OBJ_token += pnetc/op/token/count.o
include Makefile.CXXFLAGS_token_count
-include pnetc/op/token/count.d
pnetc/op/token/count.o: pnetc/op/token/count.cpp Makefile.CXXFLAGS Makefile.CXXFLAGS_token_count
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_token_count) -MM -MP -MT 'pnetc/op/token/count.o' $< -MF pnetc/op/token/count.d
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_token_count) -c $< -o $@
DEPENDS += pnetc/op/token/count.d

##
## function plus
##
OBJ_token += pnetc/op/token/plus.o
include Makefile.CXXFLAGS_token_plus
-include pnetc/op/token/plus.d
pnetc/op/token/plus.o: pnetc/op/token/plus.cpp Makefile.CXXFLAGS Makefile.CXXFLAGS_token_plus
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_token_plus) -MM -MP -MT 'pnetc/op/token/plus.o' $< -MF pnetc/op/token/plus.d
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_token_plus) -c $< -o $@
DEPENDS += pnetc/op/token/plus.d

####
#### module token
####
OBJ_token += pnetc/op/token.o
pnetc/op/token.o: pnetc/op/token.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -c $< -o $@
pnetc/op/token.d: pnetc/op/token.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -MM -MP -MT 'pnetc/op/token.d' -MT 'pnetc/op/token.o' $< -MF $@
ifneq "$(wildcard pnetc/op/token.d)" ""
  include pnetc/op/token.d
endif
DEPENDS += pnetc/op/token.d

include Makefile.LDFLAGS_token

pnetc/op/libtoken.so: $(OBJ_token) $(TYPE_OBJS) Makefile.LDFLAGS Makefile.LDFLAGS_token
	$(CXX) -shared $(filter-out Makefile.LDFLAGS Makefile.LDFLAGS_token, $^) -o $@ $(LDFLAGS_token) $(LDFLAGS) -lwe-dev

####
#### module-functions sum
####
##
## function add
##
OBJ_sum += pnetc/op/sum/add.o
include Makefile.CXXFLAGS_sum_add
-include pnetc/op/sum/add.d
pnetc/op/sum/add.o: pnetc/op/sum/add.cpp Makefile.CXXFLAGS Makefile.CXXFLAGS_sum_add
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_sum_add) -MM -MP -MT 'pnetc/op/sum/add.o' $< -MF pnetc/op/sum/add.d
	$(CXX) $(CXXFLAGS) $(CXXFLAGS_sum_add) -c $< -o $@
DEPENDS += pnetc/op/sum/add.d

####
#### module sum
####
OBJ_sum += pnetc/op/sum.o
pnetc/op/sum.o: pnetc/op/sum.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -c $< -o $@
pnetc/op/sum.d: pnetc/op/sum.cpp Makefile.CXXFLAGS
	$(CXX) $(CXXFLAGS) -MM -MP -MT 'pnetc/op/sum.d' -MT 'pnetc/op/sum.o' $< -MF $@
ifneq "$(wildcard pnetc/op/sum.d)" ""
  include pnetc/op/sum.d
endif
DEPENDS += pnetc/op/sum.d

include Makefile.LDFLAGS_sum

pnetc/op/libsum.so: $(OBJ_sum) $(TYPE_OBJS) Makefile.LDFLAGS Makefile.LDFLAGS_sum
	$(CXX) -shared $(filter-out Makefile.LDFLAGS Makefile.LDFLAGS_sum, $^) -o $@ $(LDFLAGS_sum) $(LDFLAGS) -lwe-dev

####
#### modules finished
####

ifeq "$(LIB_DESTDIR)" ""

install:
	$(error variable LIB_DESTDIR empty.)

else

ifeq "$(CP)" ""

install:
	$(error variable CP empty.)

else

ifeq "$(MKDIR)" ""

$(LIB_DESTDIR):
	$(error Could not create installation directory: Variable 'mkdir' empty.)

else

$(LIB_DESTDIR):
	@$(MKDIR) -v -p $(LIB_DESTDIR)

endif

$(LIB_DESTDIR)/libcombination_vec.so: pnetc/op/libcombination_vec.so $(LIB_DESTDIR)
	@$(CP) -v $< $@
$(LIB_DESTDIR)/libsum_degree.so: pnetc/op/libsum_degree.so $(LIB_DESTDIR)
	@$(CP) -v $< $@
$(LIB_DESTDIR)/libfeynman.so: pnetc/op/libfeynman.so $(LIB_DESTDIR)
	@$(CP) -v $< $@
$(LIB_DESTDIR)/libtoken.so: pnetc/op/libtoken.so $(LIB_DESTDIR)
	@$(CP) -v $< $@
$(LIB_DESTDIR)/libsum.so: pnetc/op/libsum.so $(LIB_DESTDIR)
	@$(CP) -v $< $@

MODULES_INSTALL += $(LIB_DESTDIR)/libcombination_vec.so
MODULES_INSTALL += $(LIB_DESTDIR)/libsum_degree.so
MODULES_INSTALL += $(LIB_DESTDIR)/libfeynman.so
MODULES_INSTALL += $(LIB_DESTDIR)/libtoken.so
MODULES_INSTALL += $(LIB_DESTDIR)/libsum.so

install: $(MODULES_INSTALL)
uninstall:
	-$(RM) $(MODULES_INSTALL)

endif

endif

ifeq "$(RM)" ""

clean:
depclean:
objclean:
modclean:
objcleandep:
	$(error Variable RM empty.)

else

.PHONY: clean depclean objclean modclean objcleandep

clean: objclean modclean depclean

depclean:
	-$(RM) $(DEPENDS)

objclean:
	-$(RM) $(OBJ_combination_vec)
	-$(RM) $(OBJ_sum_degree)
	-$(RM) $(OBJ_feynman)
	-$(RM) $(OBJ_token)
	-$(RM) $(OBJ_sum)

objcleandep: $(MODULES)
	-$(RM) $(OBJ_combination_vec)
	-$(RM) $(OBJ_sum_degree)
	-$(RM) $(OBJ_feynman)
	-$(RM) $(OBJ_token)
	-$(RM) $(OBJ_sum)

modclean:
	-$(RM) $(MODULES)

endif

